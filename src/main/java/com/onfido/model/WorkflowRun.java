/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.WorkflowRunResponseError;
import com.onfido.model.WorkflowRunSharedLink;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * WorkflowRun
 */
@JsonPropertyOrder({
  WorkflowRun.JSON_PROPERTY_APPLICANT_ID,
  WorkflowRun.JSON_PROPERTY_WORKFLOW_ID,
  WorkflowRun.JSON_PROPERTY_TAGS,
  WorkflowRun.JSON_PROPERTY_LINK,
  WorkflowRun.JSON_PROPERTY_CREATED_AT,
  WorkflowRun.JSON_PROPERTY_UPDATED_AT,
  WorkflowRun.JSON_PROPERTY_ID,
  WorkflowRun.JSON_PROPERTY_WORKFLOW_VERSION_ID,
  WorkflowRun.JSON_PROPERTY_DASHBOARD_URL,
  WorkflowRun.JSON_PROPERTY_STATUS,
  WorkflowRun.JSON_PROPERTY_OUTPUT,
  WorkflowRun.JSON_PROPERTY_REASONS,
  WorkflowRun.JSON_PROPERTY_ERROR
})
@JsonTypeName("workflow_run")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class WorkflowRun {
  public static final String JSON_PROPERTY_APPLICANT_ID = "applicant_id";
  private UUID applicantId;

  public static final String JSON_PROPERTY_WORKFLOW_ID = "workflow_id";
  private UUID workflowId;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags;

  public static final String JSON_PROPERTY_LINK = "link";
  private WorkflowRunSharedLink link;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updated_at";
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_WORKFLOW_VERSION_ID = "workflow_version_id";
  private Integer workflowVersionId;

  public static final String JSON_PROPERTY_DASHBOARD_URL = "dashboard_url";
  private String dashboardUrl;

  /**
   * The status of the Workflow Run.
   */
  public enum StatusEnum {
    AWAITING_INPUT("awaiting_input"),
    
    PROCESSING("processing"),
    
    ABANDONED("abandoned"),
    
    ERROR("error"),
    
    APPROVED("approved"),
    
    REVIEW("review"),
    
    DECLINED("declined"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_OUTPUT = "output";
  private Object output;

  public static final String JSON_PROPERTY_REASONS = "reasons";
  private List<String> reasons;

  public static final String JSON_PROPERTY_ERROR = "error";
  private WorkflowRunResponseError error;

  public WorkflowRun() { 
  }

  public WorkflowRun applicantId(UUID applicantId) {
    this.applicantId = applicantId;
    return this;
  }

   /**
   * The unique identifier for the Applicant.
   * @return applicantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getApplicantId() {
    return applicantId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicantId(UUID applicantId) {
    this.applicantId = applicantId;
  }


  public WorkflowRun workflowId(UUID workflowId) {
    this.workflowId = workflowId;
    return this;
  }

   /**
   * The unique identifier for the Workflow.
   * @return workflowId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORKFLOW_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkflowId() {
    return workflowId;
  }


  @JsonProperty(JSON_PROPERTY_WORKFLOW_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkflowId(UUID workflowId) {
    this.workflowId = workflowId;
  }


  public WorkflowRun tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public WorkflowRun addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Tags or labels assigned to the workflow run.
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public WorkflowRun link(WorkflowRunSharedLink link) {
    this.link = link;
    return this;
  }

   /**
   * Get link
   * @return link
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WorkflowRunSharedLink getLink() {
    return link;
  }


  @JsonProperty(JSON_PROPERTY_LINK)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLink(WorkflowRunSharedLink link) {
    this.link = link;
  }


  public WorkflowRun createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time when the Workflow Run was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public WorkflowRun updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time when the Workflow Run was last updated.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public WorkflowRun id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for the Workflow Run.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public WorkflowRun workflowVersionId(Integer workflowVersionId) {
    this.workflowVersionId = workflowVersionId;
    return this;
  }

   /**
   * The identifier for the Workflow version.
   * @return workflowVersionId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WORKFLOW_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWorkflowVersionId() {
    return workflowVersionId;
  }


  @JsonProperty(JSON_PROPERTY_WORKFLOW_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkflowVersionId(Integer workflowVersionId) {
    this.workflowVersionId = workflowVersionId;
  }


  public WorkflowRun dashboardUrl(String dashboardUrl) {
    this.dashboardUrl = dashboardUrl;
    return this;
  }

   /**
   * The URL for viewing the Workflow Run results on your Onfido Dashboard.
   * @return dashboardUrl
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DASHBOARD_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDashboardUrl() {
    return dashboardUrl;
  }


  @JsonProperty(JSON_PROPERTY_DASHBOARD_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDashboardUrl(String dashboardUrl) {
    this.dashboardUrl = dashboardUrl;
  }


  public WorkflowRun status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The status of the Workflow Run.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public WorkflowRun output(Object output) {
    this.output = output;
    return this;
  }

   /**
   * Output object contains all of the properties configured on the Workflow version.
   * @return output
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getOutput() {
    return output;
  }


  @JsonProperty(JSON_PROPERTY_OUTPUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutput(Object output) {
    this.output = output;
  }


  public WorkflowRun reasons(List<String> reasons) {
    this.reasons = reasons;
    return this;
  }

  public WorkflowRun addReasonsItem(String reasonsItem) {
    if (this.reasons == null) {
      this.reasons = new ArrayList<>();
    }
    this.reasons.add(reasonsItem);
    return this;
  }

   /**
   * The reasons the Workflow Run outcome was reached. Configurable when creating the Workflow version.
   * @return reasons
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REASONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getReasons() {
    return reasons;
  }


  @JsonProperty(JSON_PROPERTY_REASONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReasons(List<String> reasons) {
    this.reasons = reasons;
  }


  public WorkflowRun error(WorkflowRunResponseError error) {
    this.error = error;
    return this;
  }

   /**
   * Get error
   * @return error
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WorkflowRunResponseError getError() {
    return error;
  }


  @JsonProperty(JSON_PROPERTY_ERROR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setError(WorkflowRunResponseError error) {
    this.error = error;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public WorkflowRun putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this workflow_run object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowRun workflowRun = (WorkflowRun) o;
    return Objects.equals(this.applicantId, workflowRun.applicantId) &&
        Objects.equals(this.workflowId, workflowRun.workflowId) &&
        Objects.equals(this.tags, workflowRun.tags) &&
        Objects.equals(this.link, workflowRun.link) &&
        Objects.equals(this.createdAt, workflowRun.createdAt) &&
        Objects.equals(this.updatedAt, workflowRun.updatedAt) &&
        Objects.equals(this.id, workflowRun.id) &&
        Objects.equals(this.workflowVersionId, workflowRun.workflowVersionId) &&
        Objects.equals(this.dashboardUrl, workflowRun.dashboardUrl) &&
        Objects.equals(this.status, workflowRun.status) &&
        Objects.equals(this.output, workflowRun.output) &&
        Objects.equals(this.reasons, workflowRun.reasons) &&
        Objects.equals(this.error, workflowRun.error)&&
        Objects.equals(this.additionalProperties, workflowRun.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicantId, workflowId, tags, link, createdAt, updatedAt, id, workflowVersionId, dashboardUrl, status, output, reasons, error, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowRun {\n");
    sb.append("    applicantId: ").append(toIndentedString(applicantId)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    workflowVersionId: ").append(toIndentedString(workflowVersionId)).append("\n");
    sb.append("    dashboardUrl: ").append(toIndentedString(dashboardUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    reasons: ").append(toIndentedString(reasons)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

