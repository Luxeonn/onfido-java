/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.UsDrivingLicenceBreakdownAddress;
import com.onfido.model.UsDrivingLicenceBreakdownDocument;
import com.onfido.model.UsDrivingLicenceBreakdownPersonal;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * UsDrivingLicenceBreakdown
 */
@JsonPropertyOrder({
  UsDrivingLicenceBreakdown.JSON_PROPERTY_DOCUMENT,
  UsDrivingLicenceBreakdown.JSON_PROPERTY_ADDRESS,
  UsDrivingLicenceBreakdown.JSON_PROPERTY_PERSONAL
})
@JsonTypeName("us_driving_licence_breakdown")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class UsDrivingLicenceBreakdown {
  public static final String JSON_PROPERTY_DOCUMENT = "document";
  private UsDrivingLicenceBreakdownDocument document;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private UsDrivingLicenceBreakdownAddress address;

  public static final String JSON_PROPERTY_PERSONAL = "personal";
  private UsDrivingLicenceBreakdownPersonal personal;

  public UsDrivingLicenceBreakdown() { 
  }

  public UsDrivingLicenceBreakdown document(UsDrivingLicenceBreakdownDocument document) {
    this.document = document;
    return this;
  }

   /**
   * Get document
   * @return document
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UsDrivingLicenceBreakdownDocument getDocument() {
    return document;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocument(UsDrivingLicenceBreakdownDocument document) {
    this.document = document;
  }


  public UsDrivingLicenceBreakdown address(UsDrivingLicenceBreakdownAddress address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UsDrivingLicenceBreakdownAddress getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(UsDrivingLicenceBreakdownAddress address) {
    this.address = address;
  }


  public UsDrivingLicenceBreakdown personal(UsDrivingLicenceBreakdownPersonal personal) {
    this.personal = personal;
    return this;
  }

   /**
   * Get personal
   * @return personal
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERSONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UsDrivingLicenceBreakdownPersonal getPersonal() {
    return personal;
  }


  @JsonProperty(JSON_PROPERTY_PERSONAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersonal(UsDrivingLicenceBreakdownPersonal personal) {
    this.personal = personal;
  }


  /**
   * Return true if this us_driving_licence_breakdown object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsDrivingLicenceBreakdown usDrivingLicenceBreakdown = (UsDrivingLicenceBreakdown) o;
    return Objects.equals(this.document, usDrivingLicenceBreakdown.document) &&
        Objects.equals(this.address, usDrivingLicenceBreakdown.address) &&
        Objects.equals(this.personal, usDrivingLicenceBreakdown.personal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(document, address, personal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsDrivingLicenceBreakdown {\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    personal: ").append(toIndentedString(personal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

