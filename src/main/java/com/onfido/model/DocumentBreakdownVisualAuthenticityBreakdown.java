/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownFaceDetection;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownFonts;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownOther;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures;
import com.onfido.model.DocumentBreakdownVisualAuthenticityBreakdownTemplate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * DocumentBreakdownVisualAuthenticityBreakdown
 */
@JsonPropertyOrder({
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_FONTS,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_PICTURE_FACE_INTEGRITY,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_TEMPLATE,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_SECURITY_FEATURES,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_ORIGINAL_DOCUMENT_PRESENT,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_DIGITAL_TAMPERING,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_OTHER,
  DocumentBreakdownVisualAuthenticityBreakdown.JSON_PROPERTY_FACE_DETECTION
})
@JsonTypeName("document_breakdown_visual_authenticity_breakdown")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentBreakdownVisualAuthenticityBreakdown {
  public static final String JSON_PROPERTY_FONTS = "fonts";
  private DocumentBreakdownVisualAuthenticityBreakdownFonts fonts;

  public static final String JSON_PROPERTY_PICTURE_FACE_INTEGRITY = "picture_face_integrity";
  private DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity pictureFaceIntegrity;

  public static final String JSON_PROPERTY_TEMPLATE = "template";
  private DocumentBreakdownVisualAuthenticityBreakdownTemplate template;

  public static final String JSON_PROPERTY_SECURITY_FEATURES = "security_features";
  private DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures securityFeatures;

  public static final String JSON_PROPERTY_ORIGINAL_DOCUMENT_PRESENT = "original_document_present";
  private DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent originalDocumentPresent;

  public static final String JSON_PROPERTY_DIGITAL_TAMPERING = "digital_tampering";
  private DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering digitalTampering;

  public static final String JSON_PROPERTY_OTHER = "other";
  private DocumentBreakdownVisualAuthenticityBreakdownOther other;

  public static final String JSON_PROPERTY_FACE_DETECTION = "face_detection";
  private DocumentBreakdownVisualAuthenticityBreakdownFaceDetection faceDetection;

  public DocumentBreakdownVisualAuthenticityBreakdown() { 
  }

  public DocumentBreakdownVisualAuthenticityBreakdown fonts(DocumentBreakdownVisualAuthenticityBreakdownFonts fonts) {
    this.fonts = fonts;
    return this;
  }

   /**
   * Get fonts
   * @return fonts
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FONTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownFonts getFonts() {
    return fonts;
  }


  @JsonProperty(JSON_PROPERTY_FONTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFonts(DocumentBreakdownVisualAuthenticityBreakdownFonts fonts) {
    this.fonts = fonts;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown pictureFaceIntegrity(DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity pictureFaceIntegrity) {
    this.pictureFaceIntegrity = pictureFaceIntegrity;
    return this;
  }

   /**
   * Get pictureFaceIntegrity
   * @return pictureFaceIntegrity
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PICTURE_FACE_INTEGRITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity getPictureFaceIntegrity() {
    return pictureFaceIntegrity;
  }


  @JsonProperty(JSON_PROPERTY_PICTURE_FACE_INTEGRITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPictureFaceIntegrity(DocumentBreakdownVisualAuthenticityBreakdownPictureFaceIntegrity pictureFaceIntegrity) {
    this.pictureFaceIntegrity = pictureFaceIntegrity;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown template(DocumentBreakdownVisualAuthenticityBreakdownTemplate template) {
    this.template = template;
    return this;
  }

   /**
   * Get template
   * @return template
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownTemplate getTemplate() {
    return template;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplate(DocumentBreakdownVisualAuthenticityBreakdownTemplate template) {
    this.template = template;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown securityFeatures(DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures securityFeatures) {
    this.securityFeatures = securityFeatures;
    return this;
  }

   /**
   * Get securityFeatures
   * @return securityFeatures
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SECURITY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures getSecurityFeatures() {
    return securityFeatures;
  }


  @JsonProperty(JSON_PROPERTY_SECURITY_FEATURES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSecurityFeatures(DocumentBreakdownVisualAuthenticityBreakdownSecurityFeatures securityFeatures) {
    this.securityFeatures = securityFeatures;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown originalDocumentPresent(DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent originalDocumentPresent) {
    this.originalDocumentPresent = originalDocumentPresent;
    return this;
  }

   /**
   * Get originalDocumentPresent
   * @return originalDocumentPresent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ORIGINAL_DOCUMENT_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent getOriginalDocumentPresent() {
    return originalDocumentPresent;
  }


  @JsonProperty(JSON_PROPERTY_ORIGINAL_DOCUMENT_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOriginalDocumentPresent(DocumentBreakdownVisualAuthenticityBreakdownOriginalDocumentPresent originalDocumentPresent) {
    this.originalDocumentPresent = originalDocumentPresent;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown digitalTampering(DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering digitalTampering) {
    this.digitalTampering = digitalTampering;
    return this;
  }

   /**
   * Get digitalTampering
   * @return digitalTampering
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DIGITAL_TAMPERING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering getDigitalTampering() {
    return digitalTampering;
  }


  @JsonProperty(JSON_PROPERTY_DIGITAL_TAMPERING)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDigitalTampering(DocumentBreakdownVisualAuthenticityBreakdownDigitalTampering digitalTampering) {
    this.digitalTampering = digitalTampering;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown other(DocumentBreakdownVisualAuthenticityBreakdownOther other) {
    this.other = other;
    return this;
  }

   /**
   * Get other
   * @return other
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OTHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownOther getOther() {
    return other;
  }


  @JsonProperty(JSON_PROPERTY_OTHER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOther(DocumentBreakdownVisualAuthenticityBreakdownOther other) {
    this.other = other;
  }


  public DocumentBreakdownVisualAuthenticityBreakdown faceDetection(DocumentBreakdownVisualAuthenticityBreakdownFaceDetection faceDetection) {
    this.faceDetection = faceDetection;
    return this;
  }

   /**
   * Get faceDetection
   * @return faceDetection
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FACE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownVisualAuthenticityBreakdownFaceDetection getFaceDetection() {
    return faceDetection;
  }


  @JsonProperty(JSON_PROPERTY_FACE_DETECTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFaceDetection(DocumentBreakdownVisualAuthenticityBreakdownFaceDetection faceDetection) {
    this.faceDetection = faceDetection;
  }


  /**
   * Return true if this document_breakdown_visual_authenticity_breakdown object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentBreakdownVisualAuthenticityBreakdown documentBreakdownVisualAuthenticityBreakdown = (DocumentBreakdownVisualAuthenticityBreakdown) o;
    return Objects.equals(this.fonts, documentBreakdownVisualAuthenticityBreakdown.fonts) &&
        Objects.equals(this.pictureFaceIntegrity, documentBreakdownVisualAuthenticityBreakdown.pictureFaceIntegrity) &&
        Objects.equals(this.template, documentBreakdownVisualAuthenticityBreakdown.template) &&
        Objects.equals(this.securityFeatures, documentBreakdownVisualAuthenticityBreakdown.securityFeatures) &&
        Objects.equals(this.originalDocumentPresent, documentBreakdownVisualAuthenticityBreakdown.originalDocumentPresent) &&
        Objects.equals(this.digitalTampering, documentBreakdownVisualAuthenticityBreakdown.digitalTampering) &&
        Objects.equals(this.other, documentBreakdownVisualAuthenticityBreakdown.other) &&
        Objects.equals(this.faceDetection, documentBreakdownVisualAuthenticityBreakdown.faceDetection);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fonts, pictureFaceIntegrity, template, securityFeatures, originalDocumentPresent, digitalTampering, other, faceDetection);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentBreakdownVisualAuthenticityBreakdown {\n");
    sb.append("    fonts: ").append(toIndentedString(fonts)).append("\n");
    sb.append("    pictureFaceIntegrity: ").append(toIndentedString(pictureFaceIntegrity)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    securityFeatures: ").append(toIndentedString(securityFeatures)).append("\n");
    sb.append("    originalDocumentPresent: ").append(toIndentedString(originalDocumentPresent)).append("\n");
    sb.append("    digitalTampering: ").append(toIndentedString(digitalTampering)).append("\n");
    sb.append("    other: ").append(toIndentedString(other)).append("\n");
    sb.append("    faceDetection: ").append(toIndentedString(faceDetection)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

