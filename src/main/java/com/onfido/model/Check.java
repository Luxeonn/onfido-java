/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * Check
 */
@JsonPropertyOrder({
  Check.JSON_PROPERTY_WEBHOOK_IDS,
  Check.JSON_PROPERTY_APPLICANT_ID,
  Check.JSON_PROPERTY_APPLICANT_PROVIDES_DATA,
  Check.JSON_PROPERTY_TAGS,
  Check.JSON_PROPERTY_REDIRECT_URI,
  Check.JSON_PROPERTY_ID,
  Check.JSON_PROPERTY_CREATED_AT,
  Check.JSON_PROPERTY_HREF,
  Check.JSON_PROPERTY_STATUS,
  Check.JSON_PROPERTY_RESULT,
  Check.JSON_PROPERTY_FORM_URI,
  Check.JSON_PROPERTY_RESULTS_URI,
  Check.JSON_PROPERTY_REPORT_IDS,
  Check.JSON_PROPERTY_SANDBOX
})
@JsonTypeName("check")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Check {
  public static final String JSON_PROPERTY_WEBHOOK_IDS = "webhook_ids";
  private List<String> webhookIds;

  public static final String JSON_PROPERTY_APPLICANT_ID = "applicant_id";
  private UUID applicantId;

  public static final String JSON_PROPERTY_APPLICANT_PROVIDES_DATA = "applicant_provides_data";
  private Boolean applicantProvidesData;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags;

  public static final String JSON_PROPERTY_REDIRECT_URI = "redirect_uri";
  private String redirectUri;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_HREF = "href";
  private String href;

  /**
   * The current state of the check in the checking process.
   */
  public enum StatusEnum {
    IN_PROGRESS("in_progress"),
    
    AWAITING_APPLICANT("awaiting_applicant"),
    
    COMPLETE("complete"),
    
    WITHDRAWN("withdrawn"),
    
    PAUSED("paused"),
    
    REOPENED("reopened"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  /**
   * The overall result of the check, based on the results of the constituent reports.
   */
  public enum ResultEnum {
    CLEAR("clear"),
    
    CONSIDER("consider"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ResultEnum fromValue(String value) {
      for (ResultEnum b : ResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_RESULT = "result";
  private ResultEnum result;

  public static final String JSON_PROPERTY_FORM_URI = "form_uri";
  private String formUri;

  public static final String JSON_PROPERTY_RESULTS_URI = "results_uri";
  private String resultsUri;

  public static final String JSON_PROPERTY_REPORT_IDS = "report_ids";
  private List<UUID> reportIds;

  public static final String JSON_PROPERTY_SANDBOX = "sandbox";
  private Boolean sandbox;

  public Check() { 
  }

  public Check webhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
    return this;
  }

  public Check addWebhookIdsItem(String webhookIdsItem) {
    if (this.webhookIds == null) {
      this.webhookIds = new ArrayList<>();
    }
    this.webhookIds.add(webhookIdsItem);
    return this;
  }

   /**
   * An array of webhook ids describing which webhooks to trigger for this check.
   * @return webhookIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEBHOOK_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getWebhookIds() {
    return webhookIds;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOK_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWebhookIds(List<String> webhookIds) {
    this.webhookIds = webhookIds;
  }


  public Check applicantId(UUID applicantId) {
    this.applicantId = applicantId;
    return this;
  }

   /**
   * The ID of the applicant to do the check on.
   * @return applicantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getApplicantId() {
    return applicantId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicantId(UUID applicantId) {
    this.applicantId = applicantId;
  }


  public Check applicantProvidesData(Boolean applicantProvidesData) {
    this.applicantProvidesData = applicantProvidesData;
    return this;
  }

   /**
   * Send an applicant form to applicant to complete to proceed with check. Defaults to false. 
   * @return applicantProvidesData
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICANT_PROVIDES_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getApplicantProvidesData() {
    return applicantProvidesData;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANT_PROVIDES_DATA)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicantProvidesData(Boolean applicantProvidesData) {
    this.applicantProvidesData = applicantProvidesData;
  }


  public Check tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Check addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Array of tags being assigned to this check.
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Check redirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
    return this;
  }

   /**
   * For checks where &#x60;applicant_provides_data&#x60; is &#x60;true&#x60;, redirect to this URI when the applicant has submitted their data.
   * @return redirectUri
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedirectUri() {
    return redirectUri;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedirectUri(String redirectUri) {
    this.redirectUri = redirectUri;
  }


  public Check id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * The unique identifier for the check.
   * @return id
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public Check createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time when this check was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Check href(String href) {
    this.href = href;
    return this;
  }

   /**
   * The uri of this resource.
   * @return href
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHref() {
    return href;
  }


  @JsonProperty(JSON_PROPERTY_HREF)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHref(String href) {
    this.href = href;
  }


  public Check status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * The current state of the check in the checking process.
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Check result(ResultEnum result) {
    this.result = result;
    return this;
  }

   /**
   * The overall result of the check, based on the results of the constituent reports.
   * @return result
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ResultEnum getResult() {
    return result;
  }


  @JsonProperty(JSON_PROPERTY_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResult(ResultEnum result) {
    this.result = result;
  }


  public Check formUri(String formUri) {
    this.formUri = formUri;
    return this;
  }

   /**
   * A link to the applicant form, if &#x60;applicant_provides_data&#x60; is &#x60;true&#x60;.
   * @return formUri
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FORM_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFormUri() {
    return formUri;
  }


  @JsonProperty(JSON_PROPERTY_FORM_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFormUri(String formUri) {
    this.formUri = formUri;
  }


  public Check resultsUri(String resultsUri) {
    this.resultsUri = resultsUri;
    return this;
  }

   /**
   * A link to the corresponding results page on the Onfido dashboard.
   * @return resultsUri
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_RESULTS_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getResultsUri() {
    return resultsUri;
  }


  @JsonProperty(JSON_PROPERTY_RESULTS_URI)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setResultsUri(String resultsUri) {
    this.resultsUri = resultsUri;
  }


  public Check reportIds(List<UUID> reportIds) {
    this.reportIds = reportIds;
    return this;
  }

  public Check addReportIdsItem(UUID reportIdsItem) {
    if (this.reportIds == null) {
      this.reportIds = new ArrayList<>();
    }
    this.reportIds.add(reportIdsItem);
    return this;
  }

   /**
   * An array of report ids.
   * @return reportIds
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<UUID> getReportIds() {
    return reportIds;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportIds(List<UUID> reportIds) {
    this.reportIds = reportIds;
  }


  public Check sandbox(Boolean sandbox) {
    this.sandbox = sandbox;
    return this;
  }

   /**
   * Indicates whether the object was created in the sandbox or not.
   * @return sandbox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SANDBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSandbox() {
    return sandbox;
  }


  @JsonProperty(JSON_PROPERTY_SANDBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSandbox(Boolean sandbox) {
    this.sandbox = sandbox;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public Check putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this check object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Check check = (Check) o;
    return Objects.equals(this.webhookIds, check.webhookIds) &&
        Objects.equals(this.applicantId, check.applicantId) &&
        Objects.equals(this.applicantProvidesData, check.applicantProvidesData) &&
        Objects.equals(this.tags, check.tags) &&
        Objects.equals(this.redirectUri, check.redirectUri) &&
        Objects.equals(this.id, check.id) &&
        Objects.equals(this.createdAt, check.createdAt) &&
        Objects.equals(this.href, check.href) &&
        Objects.equals(this.status, check.status) &&
        Objects.equals(this.result, check.result) &&
        Objects.equals(this.formUri, check.formUri) &&
        Objects.equals(this.resultsUri, check.resultsUri) &&
        Objects.equals(this.reportIds, check.reportIds) &&
        Objects.equals(this.sandbox, check.sandbox)&&
        Objects.equals(this.additionalProperties, check.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(webhookIds, applicantId, applicantProvidesData, tags, redirectUri, id, createdAt, href, status, result, formUri, resultsUri, reportIds, sandbox, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Check {\n");
    sb.append("    webhookIds: ").append(toIndentedString(webhookIds)).append("\n");
    sb.append("    applicantId: ").append(toIndentedString(applicantId)).append("\n");
    sb.append("    applicantProvidesData: ").append(toIndentedString(applicantProvidesData)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    redirectUri: ").append(toIndentedString(redirectUri)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    formUri: ").append(toIndentedString(formUri)).append("\n");
    sb.append("    resultsUri: ").append(toIndentedString(resultsUri)).append("\n");
    sb.append("    reportIds: ").append(toIndentedString(reportIds)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

