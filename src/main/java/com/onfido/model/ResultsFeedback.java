/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * ResultsFeedback
 */
@JsonPropertyOrder({
  ResultsFeedback.JSON_PROPERTY_EXPECTED_RESULT,
  ResultsFeedback.JSON_PROPERTY_CHECK_ID,
  ResultsFeedback.JSON_PROPERTY_REPORT_ID,
  ResultsFeedback.JSON_PROPERTY_FEEDBACK_NOTES
})
@JsonTypeName("results_feedback")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class ResultsFeedback {
  /**
   * The expected result for the check or report.
   */
  public enum ExpectedResultEnum {
    CLEAR("clear"),
    
    CONSIDER("consider"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    ExpectedResultEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ExpectedResultEnum fromValue(String value) {
      for (ExpectedResultEnum b : ExpectedResultEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_EXPECTED_RESULT = "expected_result";
  private ExpectedResultEnum expectedResult;

  public static final String JSON_PROPERTY_CHECK_ID = "check_id";
  private UUID checkId;

  public static final String JSON_PROPERTY_REPORT_ID = "report_id";
  private UUID reportId;

  public static final String JSON_PROPERTY_FEEDBACK_NOTES = "feedback_notes";
  private String feedbackNotes;

  public ResultsFeedback() { 
  }

  public ResultsFeedback expectedResult(ExpectedResultEnum expectedResult) {
    this.expectedResult = expectedResult;
    return this;
  }

   /**
   * The expected result for the check or report.
   * @return expectedResult
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPECTED_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ExpectedResultEnum getExpectedResult() {
    return expectedResult;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpectedResult(ExpectedResultEnum expectedResult) {
    this.expectedResult = expectedResult;
  }


  public ResultsFeedback checkId(UUID checkId) {
    this.checkId = checkId;
    return this;
  }

   /**
   * The ID of the check (only if report_id is not provided).
   * @return checkId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CHECK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCheckId() {
    return checkId;
  }


  @JsonProperty(JSON_PROPERTY_CHECK_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCheckId(UUID checkId) {
    this.checkId = checkId;
  }


  public ResultsFeedback reportId(UUID reportId) {
    this.reportId = reportId;
    return this;
  }

   /**
   * The ID of the check (only if check_id is not provided).
   * @return reportId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getReportId() {
    return reportId;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setReportId(UUID reportId) {
    this.reportId = reportId;
  }


  public ResultsFeedback feedbackNotes(String feedbackNotes) {
    this.feedbackNotes = feedbackNotes;
    return this;
  }

   /**
   * Any additional information or feedback.
   * @return feedbackNotes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FEEDBACK_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFeedbackNotes() {
    return feedbackNotes;
  }


  @JsonProperty(JSON_PROPERTY_FEEDBACK_NOTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFeedbackNotes(String feedbackNotes) {
    this.feedbackNotes = feedbackNotes;
  }


  /**
   * Return true if this results_feedback object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResultsFeedback resultsFeedback = (ResultsFeedback) o;
    return Objects.equals(this.expectedResult, resultsFeedback.expectedResult) &&
        Objects.equals(this.checkId, resultsFeedback.checkId) &&
        Objects.equals(this.reportId, resultsFeedback.reportId) &&
        Objects.equals(this.feedbackNotes, resultsFeedback.feedbackNotes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expectedResult, checkId, reportId, feedbackNotes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResultsFeedback {\n");
    sb.append("    expectedResult: ").append(toIndentedString(expectedResult)).append("\n");
    sb.append("    checkId: ").append(toIndentedString(checkId)).append("\n");
    sb.append("    reportId: ").append(toIndentedString(reportId)).append("\n");
    sb.append("    feedbackNotes: ").append(toIndentedString(feedbackNotes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

