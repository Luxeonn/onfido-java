/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.DocumentBreakdownDataComparisonBreakdownIssuingCountry;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * UsDrivingLicenceBreakdownDocumentBreakdown
 */
@JsonPropertyOrder({
  UsDrivingLicenceBreakdownDocumentBreakdown.JSON_PROPERTY_CATEGORY,
  UsDrivingLicenceBreakdownDocumentBreakdown.JSON_PROPERTY_EXPIRATION_DATE,
  UsDrivingLicenceBreakdownDocumentBreakdown.JSON_PROPERTY_ISSUE_DATE,
  UsDrivingLicenceBreakdownDocumentBreakdown.JSON_PROPERTY_DOCUMENT_NUMBER
})
@JsonTypeName("us_driving_licence_breakdown_document_breakdown")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class UsDrivingLicenceBreakdownDocumentBreakdown {
  public static final String JSON_PROPERTY_CATEGORY = "category";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry category;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expiration_date";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry expirationDate;

  public static final String JSON_PROPERTY_ISSUE_DATE = "issue_date";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry issueDate;

  public static final String JSON_PROPERTY_DOCUMENT_NUMBER = "document_number";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumber;

  public UsDrivingLicenceBreakdownDocumentBreakdown() { 
  }

  public UsDrivingLicenceBreakdownDocumentBreakdown category(DocumentBreakdownDataComparisonBreakdownIssuingCountry category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(DocumentBreakdownDataComparisonBreakdownIssuingCountry category) {
    this.category = category;
  }


  public UsDrivingLicenceBreakdownDocumentBreakdown expirationDate(DocumentBreakdownDataComparisonBreakdownIssuingCountry expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(DocumentBreakdownDataComparisonBreakdownIssuingCountry expirationDate) {
    this.expirationDate = expirationDate;
  }


  public UsDrivingLicenceBreakdownDocumentBreakdown issueDate(DocumentBreakdownDataComparisonBreakdownIssuingCountry issueDate) {
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Get issueDate
   * @return issueDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getIssueDate() {
    return issueDate;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueDate(DocumentBreakdownDataComparisonBreakdownIssuingCountry issueDate) {
    this.issueDate = issueDate;
  }


  public UsDrivingLicenceBreakdownDocumentBreakdown documentNumber(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumber) {
    this.documentNumber = documentNumber;
    return this;
  }

   /**
   * Get documentNumber
   * @return documentNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDocumentNumber() {
    return documentNumber;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentNumber(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumber) {
    this.documentNumber = documentNumber;
  }


  /**
   * Return true if this us_driving_licence_breakdown_document_breakdown object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsDrivingLicenceBreakdownDocumentBreakdown usDrivingLicenceBreakdownDocumentBreakdown = (UsDrivingLicenceBreakdownDocumentBreakdown) o;
    return Objects.equals(this.category, usDrivingLicenceBreakdownDocumentBreakdown.category) &&
        Objects.equals(this.expirationDate, usDrivingLicenceBreakdownDocumentBreakdown.expirationDate) &&
        Objects.equals(this.issueDate, usDrivingLicenceBreakdownDocumentBreakdown.issueDate) &&
        Objects.equals(this.documentNumber, usDrivingLicenceBreakdownDocumentBreakdown.documentNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, expirationDate, issueDate, documentNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsDrivingLicenceBreakdownDocumentBreakdown {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    documentNumber: ").append(toIndentedString(documentNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

