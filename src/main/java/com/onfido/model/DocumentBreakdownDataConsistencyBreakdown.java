/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.DocumentBreakdownDataComparisonBreakdownIssuingCountry;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * DocumentBreakdownDataConsistencyBreakdown
 */
@JsonPropertyOrder({
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_DATE_OF_EXPIRY,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_DOCUMENT_NUMBERS,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_ISSUING_COUNTRY,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_DOCUMENT_TYPE,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_DATE_OF_BIRTH,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_GENDER,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_FIRST_NAME,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_NATIONALITY,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_LAST_NAME,
  DocumentBreakdownDataConsistencyBreakdown.JSON_PROPERTY_MULTIPLE_DATA_SOURCES_PRESENT
})
@JsonTypeName("document_breakdown_data_consistency_breakdown")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class DocumentBreakdownDataConsistencyBreakdown {
  public static final String JSON_PROPERTY_DATE_OF_EXPIRY = "date_of_expiry";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfExpiry;

  public static final String JSON_PROPERTY_DOCUMENT_NUMBERS = "document_numbers";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumbers;

  public static final String JSON_PROPERTY_ISSUING_COUNTRY = "issuing_country";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry issuingCountry;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE = "document_type";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry documentType;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "date_of_birth";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfBirth;

  public static final String JSON_PROPERTY_GENDER = "gender";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry gender;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry firstName;

  public static final String JSON_PROPERTY_NATIONALITY = "nationality";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry nationality;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry lastName;

  public static final String JSON_PROPERTY_MULTIPLE_DATA_SOURCES_PRESENT = "multiple_data_sources_present";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry multipleDataSourcesPresent;

  public DocumentBreakdownDataConsistencyBreakdown() { 
  }

  public DocumentBreakdownDataConsistencyBreakdown dateOfExpiry(DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfExpiry) {
    this.dateOfExpiry = dateOfExpiry;
    return this;
  }

   /**
   * Get dateOfExpiry
   * @return dateOfExpiry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDateOfExpiry() {
    return dateOfExpiry;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_EXPIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfExpiry(DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfExpiry) {
    this.dateOfExpiry = dateOfExpiry;
  }


  public DocumentBreakdownDataConsistencyBreakdown documentNumbers(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumbers) {
    this.documentNumbers = documentNumbers;
    return this;
  }

   /**
   * Get documentNumbers
   * @return documentNumbers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDocumentNumbers() {
    return documentNumbers;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentNumbers(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumbers) {
    this.documentNumbers = documentNumbers;
  }


  public DocumentBreakdownDataConsistencyBreakdown issuingCountry(DocumentBreakdownDataComparisonBreakdownIssuingCountry issuingCountry) {
    this.issuingCountry = issuingCountry;
    return this;
  }

   /**
   * Get issuingCountry
   * @return issuingCountry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getIssuingCountry() {
    return issuingCountry;
  }


  @JsonProperty(JSON_PROPERTY_ISSUING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuingCountry(DocumentBreakdownDataComparisonBreakdownIssuingCountry issuingCountry) {
    this.issuingCountry = issuingCountry;
  }


  public DocumentBreakdownDataConsistencyBreakdown documentType(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Get documentType
   * @return documentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDocumentType() {
    return documentType;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentType(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentType) {
    this.documentType = documentType;
  }


  public DocumentBreakdownDataConsistencyBreakdown dateOfBirth(DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfBirth(DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public DocumentBreakdownDataConsistencyBreakdown gender(DocumentBreakdownDataComparisonBreakdownIssuingCountry gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(DocumentBreakdownDataComparisonBreakdownIssuingCountry gender) {
    this.gender = gender;
  }


  public DocumentBreakdownDataConsistencyBreakdown firstName(DocumentBreakdownDataComparisonBreakdownIssuingCountry firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(DocumentBreakdownDataComparisonBreakdownIssuingCountry firstName) {
    this.firstName = firstName;
  }


  public DocumentBreakdownDataConsistencyBreakdown nationality(DocumentBreakdownDataComparisonBreakdownIssuingCountry nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Get nationality
   * @return nationality
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getNationality() {
    return nationality;
  }


  @JsonProperty(JSON_PROPERTY_NATIONALITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNationality(DocumentBreakdownDataComparisonBreakdownIssuingCountry nationality) {
    this.nationality = nationality;
  }


  public DocumentBreakdownDataConsistencyBreakdown lastName(DocumentBreakdownDataComparisonBreakdownIssuingCountry lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(DocumentBreakdownDataComparisonBreakdownIssuingCountry lastName) {
    this.lastName = lastName;
  }


  public DocumentBreakdownDataConsistencyBreakdown multipleDataSourcesPresent(DocumentBreakdownDataComparisonBreakdownIssuingCountry multipleDataSourcesPresent) {
    this.multipleDataSourcesPresent = multipleDataSourcesPresent;
    return this;
  }

   /**
   * Get multipleDataSourcesPresent
   * @return multipleDataSourcesPresent
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MULTIPLE_DATA_SOURCES_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getMultipleDataSourcesPresent() {
    return multipleDataSourcesPresent;
  }


  @JsonProperty(JSON_PROPERTY_MULTIPLE_DATA_SOURCES_PRESENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMultipleDataSourcesPresent(DocumentBreakdownDataComparisonBreakdownIssuingCountry multipleDataSourcesPresent) {
    this.multipleDataSourcesPresent = multipleDataSourcesPresent;
  }


  /**
   * Return true if this document_breakdown_data_consistency_breakdown object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentBreakdownDataConsistencyBreakdown documentBreakdownDataConsistencyBreakdown = (DocumentBreakdownDataConsistencyBreakdown) o;
    return Objects.equals(this.dateOfExpiry, documentBreakdownDataConsistencyBreakdown.dateOfExpiry) &&
        Objects.equals(this.documentNumbers, documentBreakdownDataConsistencyBreakdown.documentNumbers) &&
        Objects.equals(this.issuingCountry, documentBreakdownDataConsistencyBreakdown.issuingCountry) &&
        Objects.equals(this.documentType, documentBreakdownDataConsistencyBreakdown.documentType) &&
        Objects.equals(this.dateOfBirth, documentBreakdownDataConsistencyBreakdown.dateOfBirth) &&
        Objects.equals(this.gender, documentBreakdownDataConsistencyBreakdown.gender) &&
        Objects.equals(this.firstName, documentBreakdownDataConsistencyBreakdown.firstName) &&
        Objects.equals(this.nationality, documentBreakdownDataConsistencyBreakdown.nationality) &&
        Objects.equals(this.lastName, documentBreakdownDataConsistencyBreakdown.lastName) &&
        Objects.equals(this.multipleDataSourcesPresent, documentBreakdownDataConsistencyBreakdown.multipleDataSourcesPresent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dateOfExpiry, documentNumbers, issuingCountry, documentType, dateOfBirth, gender, firstName, nationality, lastName, multipleDataSourcesPresent);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentBreakdownDataConsistencyBreakdown {\n");
    sb.append("    dateOfExpiry: ").append(toIndentedString(dateOfExpiry)).append("\n");
    sb.append("    documentNumbers: ").append(toIndentedString(documentNumbers)).append("\n");
    sb.append("    issuingCountry: ").append(toIndentedString(issuingCountry)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    multipleDataSourcesPresent: ").append(toIndentedString(multipleDataSourcesPresent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

