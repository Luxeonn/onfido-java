/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.AddressBuilder;
import com.onfido.model.ConsentsBuilder;
import com.onfido.model.IdNumber;
import com.onfido.model.LocationBuilder;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * ApplicantUpdater
 */
@JsonPropertyOrder({
  ApplicantUpdater.JSON_PROPERTY_EMAIL,
  ApplicantUpdater.JSON_PROPERTY_DOB,
  ApplicantUpdater.JSON_PROPERTY_ID_NUMBERS,
  ApplicantUpdater.JSON_PROPERTY_PHONE_NUMBER,
  ApplicantUpdater.JSON_PROPERTY_CONSENTS,
  ApplicantUpdater.JSON_PROPERTY_ADDRESS,
  ApplicantUpdater.JSON_PROPERTY_LOCATION,
  ApplicantUpdater.JSON_PROPERTY_FIRST_NAME,
  ApplicantUpdater.JSON_PROPERTY_LAST_NAME
})
@JsonTypeName("applicant_updater")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApplicantUpdater {
  public static final String JSON_PROPERTY_EMAIL = "email";
  private String email;

  public static final String JSON_PROPERTY_DOB = "dob";
  private LocalDate dob;

  public static final String JSON_PROPERTY_ID_NUMBERS = "id_numbers";
  private List<IdNumber> idNumbers;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phone_number";
  private String phoneNumber;

  public static final String JSON_PROPERTY_CONSENTS = "consents";
  private ConsentsBuilder consents;

  public static final String JSON_PROPERTY_ADDRESS = "address";
  private AddressBuilder address;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private LocationBuilder location;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private String firstName;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private String lastName;

  public ApplicantUpdater() { 
  }

  public ApplicantUpdater email(String email) {
    this.email = email;
    return this;
  }

   /**
   * The applicant&#39;s email address. Required if doing a US check, or a UK check for which &#x60;applicant_provides_data&#x60; is &#x60;true&#x60;.
   * @return email
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getEmail() {
    return email;
  }


  @JsonProperty(JSON_PROPERTY_EMAIL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmail(String email) {
    this.email = email;
  }


  public ApplicantUpdater dob(LocalDate dob) {
    this.dob = dob;
    return this;
  }

   /**
   * The applicant&#39;s date of birth
   * @return dob
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDob() {
    return dob;
  }


  @JsonProperty(JSON_PROPERTY_DOB)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDob(LocalDate dob) {
    this.dob = dob;
  }


  public ApplicantUpdater idNumbers(List<IdNumber> idNumbers) {
    this.idNumbers = idNumbers;
    return this;
  }

  public ApplicantUpdater addIdNumbersItem(IdNumber idNumbersItem) {
    if (this.idNumbers == null) {
      this.idNumbers = new ArrayList<>();
    }
    this.idNumbers.add(idNumbersItem);
    return this;
  }

   /**
   * Get idNumbers
   * @return idNumbers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<IdNumber> getIdNumbers() {
    return idNumbers;
  }


  @JsonProperty(JSON_PROPERTY_ID_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdNumbers(List<IdNumber> idNumbers) {
    this.idNumbers = idNumbers;
  }


  public ApplicantUpdater phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * The applicant&#39;s phone number
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public ApplicantUpdater consents(ConsentsBuilder consents) {
    this.consents = consents;
    return this;
  }

   /**
   * Get consents
   * @return consents
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CONSENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ConsentsBuilder getConsents() {
    return consents;
  }


  @JsonProperty(JSON_PROPERTY_CONSENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConsents(ConsentsBuilder consents) {
    this.consents = consents;
  }


  public ApplicantUpdater address(AddressBuilder address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AddressBuilder getAddress() {
    return address;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddress(AddressBuilder address) {
    this.address = address;
  }


  public ApplicantUpdater location(LocationBuilder location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocationBuilder getLocation() {
    return location;
  }


  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLocation(LocationBuilder location) {
    this.location = location;
  }


  public ApplicantUpdater firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * The applicant&#39;s first name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public ApplicantUpdater lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * The applicant&#39;s surname
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public ApplicantUpdater putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this applicant_updater object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicantUpdater applicantUpdater = (ApplicantUpdater) o;
    return Objects.equals(this.email, applicantUpdater.email) &&
        Objects.equals(this.dob, applicantUpdater.dob) &&
        Objects.equals(this.idNumbers, applicantUpdater.idNumbers) &&
        Objects.equals(this.phoneNumber, applicantUpdater.phoneNumber) &&
        Objects.equals(this.consents, applicantUpdater.consents) &&
        Objects.equals(this.address, applicantUpdater.address) &&
        Objects.equals(this.location, applicantUpdater.location) &&
        Objects.equals(this.firstName, applicantUpdater.firstName) &&
        Objects.equals(this.lastName, applicantUpdater.lastName)&&
        Objects.equals(this.additionalProperties, applicantUpdater.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, dob, idNumbers, phoneNumber, consents, address, location, firstName, lastName, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicantUpdater {\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    dob: ").append(toIndentedString(dob)).append("\n");
    sb.append("    idNumbers: ").append(toIndentedString(idNumbers)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    consents: ").append(toIndentedString(consents)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

