/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.DocumentBreakdownDataComparisonBreakdownIssuingCountry;
import com.onfido.model.DocumentBreakdownDataValidationBreakdownDocumentExpiration;
import com.onfido.model.DocumentBreakdownDataValidationBreakdownExpiryDate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * DocumentBreakdownDataValidationBreakdown
 */
@JsonPropertyOrder({
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_GENDER,
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_DATE_OF_BIRTH,
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_DOCUMENT_NUMBERS,
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_DOCUMENT_EXPIRATION,
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_EXPIRY_DATE,
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_MRZ,
  DocumentBreakdownDataValidationBreakdown.JSON_PROPERTY_BARCODE
})
@JsonTypeName("document_breakdown_data_validation_breakdown")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class DocumentBreakdownDataValidationBreakdown {
  public static final String JSON_PROPERTY_GENDER = "gender";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry gender;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "date_of_birth";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfBirth;

  public static final String JSON_PROPERTY_DOCUMENT_NUMBERS = "document_numbers";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumbers;

  public static final String JSON_PROPERTY_DOCUMENT_EXPIRATION = "document_expiration";
  private DocumentBreakdownDataValidationBreakdownDocumentExpiration documentExpiration;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  private DocumentBreakdownDataValidationBreakdownExpiryDate expiryDate;

  public static final String JSON_PROPERTY_MRZ = "mrz";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry mrz;

  public static final String JSON_PROPERTY_BARCODE = "barcode";
  private DocumentBreakdownDataComparisonBreakdownIssuingCountry barcode;

  public DocumentBreakdownDataValidationBreakdown() { 
  }

  public DocumentBreakdownDataValidationBreakdown gender(DocumentBreakdownDataComparisonBreakdownIssuingCountry gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(DocumentBreakdownDataComparisonBreakdownIssuingCountry gender) {
    this.gender = gender;
  }


  public DocumentBreakdownDataValidationBreakdown dateOfBirth(DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfBirth(DocumentBreakdownDataComparisonBreakdownIssuingCountry dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public DocumentBreakdownDataValidationBreakdown documentNumbers(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumbers) {
    this.documentNumbers = documentNumbers;
    return this;
  }

   /**
   * Get documentNumbers
   * @return documentNumbers
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getDocumentNumbers() {
    return documentNumbers;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_NUMBERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentNumbers(DocumentBreakdownDataComparisonBreakdownIssuingCountry documentNumbers) {
    this.documentNumbers = documentNumbers;
  }


  public DocumentBreakdownDataValidationBreakdown documentExpiration(DocumentBreakdownDataValidationBreakdownDocumentExpiration documentExpiration) {
    this.documentExpiration = documentExpiration;
    return this;
  }

   /**
   * Get documentExpiration
   * @return documentExpiration
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataValidationBreakdownDocumentExpiration getDocumentExpiration() {
    return documentExpiration;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_EXPIRATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentExpiration(DocumentBreakdownDataValidationBreakdownDocumentExpiration documentExpiration) {
    this.documentExpiration = documentExpiration;
  }


  public DocumentBreakdownDataValidationBreakdown expiryDate(DocumentBreakdownDataValidationBreakdownExpiryDate expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Get expiryDate
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataValidationBreakdownExpiryDate getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(DocumentBreakdownDataValidationBreakdownExpiryDate expiryDate) {
    this.expiryDate = expiryDate;
  }


  public DocumentBreakdownDataValidationBreakdown mrz(DocumentBreakdownDataComparisonBreakdownIssuingCountry mrz) {
    this.mrz = mrz;
    return this;
  }

   /**
   * Get mrz
   * @return mrz
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MRZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getMrz() {
    return mrz;
  }


  @JsonProperty(JSON_PROPERTY_MRZ)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMrz(DocumentBreakdownDataComparisonBreakdownIssuingCountry mrz) {
    this.mrz = mrz;
  }


  public DocumentBreakdownDataValidationBreakdown barcode(DocumentBreakdownDataComparisonBreakdownIssuingCountry barcode) {
    this.barcode = barcode;
    return this;
  }

   /**
   * Get barcode
   * @return barcode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BARCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentBreakdownDataComparisonBreakdownIssuingCountry getBarcode() {
    return barcode;
  }


  @JsonProperty(JSON_PROPERTY_BARCODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBarcode(DocumentBreakdownDataComparisonBreakdownIssuingCountry barcode) {
    this.barcode = barcode;
  }


  /**
   * Return true if this document_breakdown_data_validation_breakdown object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentBreakdownDataValidationBreakdown documentBreakdownDataValidationBreakdown = (DocumentBreakdownDataValidationBreakdown) o;
    return Objects.equals(this.gender, documentBreakdownDataValidationBreakdown.gender) &&
        Objects.equals(this.dateOfBirth, documentBreakdownDataValidationBreakdown.dateOfBirth) &&
        Objects.equals(this.documentNumbers, documentBreakdownDataValidationBreakdown.documentNumbers) &&
        Objects.equals(this.documentExpiration, documentBreakdownDataValidationBreakdown.documentExpiration) &&
        Objects.equals(this.expiryDate, documentBreakdownDataValidationBreakdown.expiryDate) &&
        Objects.equals(this.mrz, documentBreakdownDataValidationBreakdown.mrz) &&
        Objects.equals(this.barcode, documentBreakdownDataValidationBreakdown.barcode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(gender, dateOfBirth, documentNumbers, documentExpiration, expiryDate, mrz, barcode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentBreakdownDataValidationBreakdown {\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    documentNumbers: ").append(toIndentedString(documentNumbers)).append("\n");
    sb.append("    documentExpiration: ").append(toIndentedString(documentExpiration)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("    mrz: ").append(toIndentedString(mrz)).append("\n");
    sb.append("    barcode: ").append(toIndentedString(barcode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

