/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * KnownFacesPropertiesMatchesInner
 */
@JsonPropertyOrder({
  KnownFacesPropertiesMatchesInner.JSON_PROPERTY_APPLICANT_ID,
  KnownFacesPropertiesMatchesInner.JSON_PROPERTY_SCORE,
  KnownFacesPropertiesMatchesInner.JSON_PROPERTY_MEDIA_ID,
  KnownFacesPropertiesMatchesInner.JSON_PROPERTY_MEDIA_TYPE,
  KnownFacesPropertiesMatchesInner.JSON_PROPERTY_SUSPECTED
})
@JsonTypeName("known_faces_properties_matches_inner")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class KnownFacesPropertiesMatchesInner {
  public static final String JSON_PROPERTY_APPLICANT_ID = "applicant_id";
  private UUID applicantId;

  public static final String JSON_PROPERTY_SCORE = "score";
  private Float score;

  public static final String JSON_PROPERTY_MEDIA_ID = "media_id";
  private UUID mediaId;

  public static final String JSON_PROPERTY_MEDIA_TYPE = "media_type";
  private String mediaType;

  public static final String JSON_PROPERTY_SUSPECTED = "suspected";
  private Boolean suspected;

  public KnownFacesPropertiesMatchesInner() { 
  }

  public KnownFacesPropertiesMatchesInner applicantId(UUID applicantId) {
    this.applicantId = applicantId;
    return this;
  }

   /**
   * The applicant ID of the matched applicant.
   * @return applicantId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getApplicantId() {
    return applicantId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setApplicantId(UUID applicantId) {
    this.applicantId = applicantId;
  }


  public KnownFacesPropertiesMatchesInner score(Float score) {
    this.score = score;
    return this;
  }

   /**
   * A floating point number between 0 and 1 that expresses how similar the two faces are, where 1 is a perfect match.
   * @return score
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setScore(Float score) {
    this.score = score;
  }


  public KnownFacesPropertiesMatchesInner mediaId(UUID mediaId) {
    this.mediaId = mediaId;
    return this;
  }

   /**
   * The corresponding UUID for the media type.
   * @return mediaId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getMediaId() {
    return mediaId;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaId(UUID mediaId) {
    this.mediaId = mediaId;
  }


  public KnownFacesPropertiesMatchesInner mediaType(String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

   /**
   * The media type (for example live_photos or live_videos).
   * @return mediaType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMediaType() {
    return mediaType;
  }


  @JsonProperty(JSON_PROPERTY_MEDIA_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }


  public KnownFacesPropertiesMatchesInner suspected(Boolean suspected) {
    this.suspected = suspected;
    return this;
  }

   /**
   * Indicates if match is suspected based on fuzzy name matching feature. Dependent on feature being active for account, otherwise defaults to true.
   * @return suspected
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUSPECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSuspected() {
    return suspected;
  }


  @JsonProperty(JSON_PROPERTY_SUSPECTED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSuspected(Boolean suspected) {
    this.suspected = suspected;
  }


  /**
   * Return true if this known_faces_properties_matches_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KnownFacesPropertiesMatchesInner knownFacesPropertiesMatchesInner = (KnownFacesPropertiesMatchesInner) o;
    return Objects.equals(this.applicantId, knownFacesPropertiesMatchesInner.applicantId) &&
        Objects.equals(this.score, knownFacesPropertiesMatchesInner.score) &&
        Objects.equals(this.mediaId, knownFacesPropertiesMatchesInner.mediaId) &&
        Objects.equals(this.mediaType, knownFacesPropertiesMatchesInner.mediaType) &&
        Objects.equals(this.suspected, knownFacesPropertiesMatchesInner.suspected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicantId, score, mediaId, mediaType, suspected);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KnownFacesPropertiesMatchesInner {\n");
    sb.append("    applicantId: ").append(toIndentedString(applicantId)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    mediaId: ").append(toIndentedString(mediaId)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    suspected: ").append(toIndentedString(suspected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

