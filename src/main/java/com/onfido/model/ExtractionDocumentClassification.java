/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.onfido.model.CountryCodes;
import com.onfido.model.DocumentTypes;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * ExtractionDocumentClassification
 */
@JsonPropertyOrder({
  ExtractionDocumentClassification.JSON_PROPERTY_ISSUING_COUNTRY,
  ExtractionDocumentClassification.JSON_PROPERTY_DOCUMENT_TYPE,
  ExtractionDocumentClassification.JSON_PROPERTY_ISSUING_STATE,
  ExtractionDocumentClassification.JSON_PROPERTY_SUBTYPE,
  ExtractionDocumentClassification.JSON_PROPERTY_VERSION
})
@JsonTypeName("extraction_document_classification")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class ExtractionDocumentClassification {
  public static final String JSON_PROPERTY_ISSUING_COUNTRY = "issuing_country";
  private CountryCodes issuingCountry;

  public static final String JSON_PROPERTY_DOCUMENT_TYPE = "document_type";
  private DocumentTypes documentType;

  public static final String JSON_PROPERTY_ISSUING_STATE = "issuing_state";
  private String issuingState;

  /**
   * The document subtype (if available).
   */
  public enum SubtypeEnum {
    FULL("full"),
    
    NOT_FULL("not_full"),
    
    PROVISIONAL("provisional"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    SubtypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static SubtypeEnum fromValue(String value) {
      for (SubtypeEnum b : SubtypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_SUBTYPE = "subtype";
  private SubtypeEnum subtype;

  public static final String JSON_PROPERTY_VERSION = "version";
  private String version;

  public ExtractionDocumentClassification() { 
  }

  public ExtractionDocumentClassification issuingCountry(CountryCodes issuingCountry) {
    this.issuingCountry = issuingCountry;
    return this;
  }

   /**
   * Document country in 3-letter ISO code.
   * @return issuingCountry
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CountryCodes getIssuingCountry() {
    return issuingCountry;
  }


  @JsonProperty(JSON_PROPERTY_ISSUING_COUNTRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuingCountry(CountryCodes issuingCountry) {
    this.issuingCountry = issuingCountry;
  }


  public ExtractionDocumentClassification documentType(DocumentTypes documentType) {
    this.documentType = documentType;
    return this;
  }

   /**
   * Type of document.
   * @return documentType
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentTypes getDocumentType() {
    return documentType;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentType(DocumentTypes documentType) {
    this.documentType = documentType;
  }


  public ExtractionDocumentClassification issuingState(String issuingState) {
    this.issuingState = issuingState;
    return this;
  }

   /**
   * The state that issued the document (if available).
   * @return issuingState
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUING_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIssuingState() {
    return issuingState;
  }


  @JsonProperty(JSON_PROPERTY_ISSUING_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssuingState(String issuingState) {
    this.issuingState = issuingState;
  }


  public ExtractionDocumentClassification subtype(SubtypeEnum subtype) {
    this.subtype = subtype;
    return this;
  }

   /**
   * The document subtype (if available).
   * @return subtype
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SUBTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SubtypeEnum getSubtype() {
    return subtype;
  }


  @JsonProperty(JSON_PROPERTY_SUBTYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubtype(SubtypeEnum subtype) {
    this.subtype = subtype;
  }


  public ExtractionDocumentClassification version(String version) {
    this.version = version;
    return this;
  }

   /**
   * The document issuing version (if available).
   * @return version
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(JSON_PROPERTY_VERSION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(String version) {
    this.version = version;
  }


  /**
   * Return true if this extraction_document_classification object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExtractionDocumentClassification extractionDocumentClassification = (ExtractionDocumentClassification) o;
    return Objects.equals(this.issuingCountry, extractionDocumentClassification.issuingCountry) &&
        Objects.equals(this.documentType, extractionDocumentClassification.documentType) &&
        Objects.equals(this.issuingState, extractionDocumentClassification.issuingState) &&
        Objects.equals(this.subtype, extractionDocumentClassification.subtype) &&
        Objects.equals(this.version, extractionDocumentClassification.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(issuingCountry, documentType, issuingState, subtype, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExtractionDocumentClassification {\n");
    sb.append("    issuingCountry: ").append(toIndentedString(issuingCountry)).append("\n");
    sb.append("    documentType: ").append(toIndentedString(documentType)).append("\n");
    sb.append("    issuingState: ").append(toIndentedString(issuingState)).append("\n");
    sb.append("    subtype: ").append(toIndentedString(subtype)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

