/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * UsDrivingLicenceBuilder
 */
@JsonPropertyOrder({
  UsDrivingLicenceBuilder.JSON_PROPERTY_ID_NUMBER,
  UsDrivingLicenceBuilder.JSON_PROPERTY_ISSUE_STATE,
  UsDrivingLicenceBuilder.JSON_PROPERTY_ADDRESS_LINE1,
  UsDrivingLicenceBuilder.JSON_PROPERTY_ADDRESS_LINE2,
  UsDrivingLicenceBuilder.JSON_PROPERTY_CITY,
  UsDrivingLicenceBuilder.JSON_PROPERTY_DATE_OF_BIRTH,
  UsDrivingLicenceBuilder.JSON_PROPERTY_DOCUMENT_CATEGORY,
  UsDrivingLicenceBuilder.JSON_PROPERTY_EXPIRATION_DATE,
  UsDrivingLicenceBuilder.JSON_PROPERTY_EYE_COLOR_CODE,
  UsDrivingLicenceBuilder.JSON_PROPERTY_FIRST_NAME,
  UsDrivingLicenceBuilder.JSON_PROPERTY_GENDER,
  UsDrivingLicenceBuilder.JSON_PROPERTY_ISSUE_DATE,
  UsDrivingLicenceBuilder.JSON_PROPERTY_LAST_NAME,
  UsDrivingLicenceBuilder.JSON_PROPERTY_MIDDLE_NAME,
  UsDrivingLicenceBuilder.JSON_PROPERTY_NAME_SUFFIX,
  UsDrivingLicenceBuilder.JSON_PROPERTY_POSTAL_CODE,
  UsDrivingLicenceBuilder.JSON_PROPERTY_STATE,
  UsDrivingLicenceBuilder.JSON_PROPERTY_WEIGHT_MEASURE
})
@JsonTypeName("us_driving_licence_builder")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UsDrivingLicenceBuilder {
  public static final String JSON_PROPERTY_ID_NUMBER = "id_number";
  private String idNumber;

  public static final String JSON_PROPERTY_ISSUE_STATE = "issue_state";
  private String issueState;

  public static final String JSON_PROPERTY_ADDRESS_LINE1 = "address_line_1";
  private String addressLine1;

  public static final String JSON_PROPERTY_ADDRESS_LINE2 = "address_line_2";
  private String addressLine2;

  public static final String JSON_PROPERTY_CITY = "city";
  private String city;

  public static final String JSON_PROPERTY_DATE_OF_BIRTH = "date_of_birth";
  private LocalDate dateOfBirth;

  /**
   * Document category.
   */
  public enum DocumentCategoryEnum {
    DRIVER_LICENSE("driver license"),
    
    DRIVER_PERMIT("driver permit"),
    
    ID_CARD("id card"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    DocumentCategoryEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DocumentCategoryEnum fromValue(String value) {
      for (DocumentCategoryEnum b : DocumentCategoryEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_DOCUMENT_CATEGORY = "document_category";
  private DocumentCategoryEnum documentCategory;

  public static final String JSON_PROPERTY_EXPIRATION_DATE = "expiration_date";
  private LocalDate expirationDate;

  /**
   * Eye color code.
   */
  public enum EyeColorCodeEnum {
    BLK("BLK"),
    
    BLU("BLU"),
    
    BRO("BRO"),
    
    DIC("DIC"),
    
    GRY("GRY"),
    
    GRN("GRN"),
    
    HAZ("HAZ"),
    
    MAR("MAR"),
    
    PNK("PNK"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    EyeColorCodeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static EyeColorCodeEnum fromValue(String value) {
      for (EyeColorCodeEnum b : EyeColorCodeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_EYE_COLOR_CODE = "eye_color_code";
  private EyeColorCodeEnum eyeColorCode;

  public static final String JSON_PROPERTY_FIRST_NAME = "first_name";
  private String firstName;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE("Male"),
    
    FEMALE("Female"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  private GenderEnum gender;

  public static final String JSON_PROPERTY_ISSUE_DATE = "issue_date";
  private LocalDate issueDate;

  public static final String JSON_PROPERTY_LAST_NAME = "last_name";
  private String lastName;

  public static final String JSON_PROPERTY_MIDDLE_NAME = "middle_name";
  private String middleName;

  public static final String JSON_PROPERTY_NAME_SUFFIX = "name_suffix";
  private String nameSuffix;

  public static final String JSON_PROPERTY_POSTAL_CODE = "postal_code";
  private String postalCode;

  public static final String JSON_PROPERTY_STATE = "state";
  private String state;

  public static final String JSON_PROPERTY_WEIGHT_MEASURE = "weight_measure";
  private Integer weightMeasure;

  public UsDrivingLicenceBuilder() { 
  }

  @JsonCreator
  public UsDrivingLicenceBuilder(
    @JsonProperty(JSON_PROPERTY_GENDER) GenderEnum gender
  ) {
    this();
    this.gender = gender;
  }

  public UsDrivingLicenceBuilder idNumber(String idNumber) {
    this.idNumber = idNumber;
    return this;
  }

   /**
   * Driving licence ID number
   * @return idNumber
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIdNumber() {
    return idNumber;
  }


  @JsonProperty(JSON_PROPERTY_ID_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIdNumber(String idNumber) {
    this.idNumber = idNumber;
  }


  public UsDrivingLicenceBuilder issueState(String issueState) {
    this.issueState = issueState;
    return this;
  }

   /**
   * Two letter code of issuing state (state-issued driving licenses only)
   * @return issueState
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ISSUE_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIssueState() {
    return issueState;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIssueState(String issueState) {
    this.issueState = issueState;
  }


  public UsDrivingLicenceBuilder addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Line 1 of the address
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressLine1() {
    return addressLine1;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE1)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }


  public UsDrivingLicenceBuilder addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Line 2 of the address
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAddressLine2() {
    return addressLine2;
  }


  @JsonProperty(JSON_PROPERTY_ADDRESS_LINE2)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }


  public UsDrivingLicenceBuilder city(String city) {
    this.city = city;
    return this;
  }

   /**
   * The city of the owner&#39;s address
   * @return city
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCity() {
    return city;
  }


  @JsonProperty(JSON_PROPERTY_CITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCity(String city) {
    this.city = city;
  }


  public UsDrivingLicenceBuilder dateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Date of birth in yyyy-mm-dd format
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDateOfBirth() {
    return dateOfBirth;
  }


  @JsonProperty(JSON_PROPERTY_DATE_OF_BIRTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDateOfBirth(LocalDate dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }


  public UsDrivingLicenceBuilder documentCategory(DocumentCategoryEnum documentCategory) {
    this.documentCategory = documentCategory;
    return this;
  }

   /**
   * Document category.
   * @return documentCategory
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DOCUMENT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public DocumentCategoryEnum getDocumentCategory() {
    return documentCategory;
  }


  @JsonProperty(JSON_PROPERTY_DOCUMENT_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDocumentCategory(DocumentCategoryEnum documentCategory) {
    this.documentCategory = documentCategory;
  }


  public UsDrivingLicenceBuilder expirationDate(LocalDate expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration date of the driving licence in yyyy-mm-dd format
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getExpirationDate() {
    return expirationDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRATION_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpirationDate(LocalDate expirationDate) {
    this.expirationDate = expirationDate;
  }


  public UsDrivingLicenceBuilder eyeColorCode(EyeColorCodeEnum eyeColorCode) {
    this.eyeColorCode = eyeColorCode;
    return this;
  }

   /**
   * Eye color code.
   * @return eyeColorCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EYE_COLOR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public EyeColorCodeEnum getEyeColorCode() {
    return eyeColorCode;
  }


  @JsonProperty(JSON_PROPERTY_EYE_COLOR_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEyeColorCode(EyeColorCodeEnum eyeColorCode) {
    this.eyeColorCode = eyeColorCode;
  }


  public UsDrivingLicenceBuilder firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * The owner&#39;s first name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFirstName() {
    return firstName;
  }


  @JsonProperty(JSON_PROPERTY_FIRST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenderEnum getGender() {
    return gender;
  }




  public UsDrivingLicenceBuilder issueDate(LocalDate issueDate) {
    this.issueDate = issueDate;
    return this;
  }

   /**
   * Issue date in yyyy-mm-dd format
   * @return issueDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getIssueDate() {
    return issueDate;
  }


  @JsonProperty(JSON_PROPERTY_ISSUE_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIssueDate(LocalDate issueDate) {
    this.issueDate = issueDate;
  }


  public UsDrivingLicenceBuilder lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * The owner&#39;s surname
   * @return lastName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLastName() {
    return lastName;
  }


  @JsonProperty(JSON_PROPERTY_LAST_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public UsDrivingLicenceBuilder middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * The owner&#39;s middle name
   * @return middleName
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMiddleName() {
    return middleName;
  }


  @JsonProperty(JSON_PROPERTY_MIDDLE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }


  public UsDrivingLicenceBuilder nameSuffix(String nameSuffix) {
    this.nameSuffix = nameSuffix;
    return this;
  }

   /**
   * The owner&#39;s name suffix
   * @return nameSuffix
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getNameSuffix() {
    return nameSuffix;
  }


  @JsonProperty(JSON_PROPERTY_NAME_SUFFIX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setNameSuffix(String nameSuffix) {
    this.nameSuffix = nameSuffix;
  }


  public UsDrivingLicenceBuilder postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * The postcode or ZIP of the owner&#39;s address
   * @return postalCode
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPostalCode() {
    return postalCode;
  }


  @JsonProperty(JSON_PROPERTY_POSTAL_CODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }


  public UsDrivingLicenceBuilder state(String state) {
    this.state = state;
    return this;
  }

   /**
   * 2-characters state code
   * @return state
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(String state) {
    this.state = state;
  }


  public UsDrivingLicenceBuilder weightMeasure(Integer weightMeasure) {
    this.weightMeasure = weightMeasure;
    return this;
  }

   /**
   * Weight in pounds
   * @return weightMeasure
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_WEIGHT_MEASURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getWeightMeasure() {
    return weightMeasure;
  }


  @JsonProperty(JSON_PROPERTY_WEIGHT_MEASURE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWeightMeasure(Integer weightMeasure) {
    this.weightMeasure = weightMeasure;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   */
  @JsonAnySetter
  public UsDrivingLicenceBuilder putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }

  /**
   * Return true if this us_driving_licence_builder object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsDrivingLicenceBuilder usDrivingLicenceBuilder = (UsDrivingLicenceBuilder) o;
    return Objects.equals(this.idNumber, usDrivingLicenceBuilder.idNumber) &&
        Objects.equals(this.issueState, usDrivingLicenceBuilder.issueState) &&
        Objects.equals(this.addressLine1, usDrivingLicenceBuilder.addressLine1) &&
        Objects.equals(this.addressLine2, usDrivingLicenceBuilder.addressLine2) &&
        Objects.equals(this.city, usDrivingLicenceBuilder.city) &&
        Objects.equals(this.dateOfBirth, usDrivingLicenceBuilder.dateOfBirth) &&
        Objects.equals(this.documentCategory, usDrivingLicenceBuilder.documentCategory) &&
        Objects.equals(this.expirationDate, usDrivingLicenceBuilder.expirationDate) &&
        Objects.equals(this.eyeColorCode, usDrivingLicenceBuilder.eyeColorCode) &&
        Objects.equals(this.firstName, usDrivingLicenceBuilder.firstName) &&
        Objects.equals(this.gender, usDrivingLicenceBuilder.gender) &&
        Objects.equals(this.issueDate, usDrivingLicenceBuilder.issueDate) &&
        Objects.equals(this.lastName, usDrivingLicenceBuilder.lastName) &&
        Objects.equals(this.middleName, usDrivingLicenceBuilder.middleName) &&
        Objects.equals(this.nameSuffix, usDrivingLicenceBuilder.nameSuffix) &&
        Objects.equals(this.postalCode, usDrivingLicenceBuilder.postalCode) &&
        Objects.equals(this.state, usDrivingLicenceBuilder.state) &&
        Objects.equals(this.weightMeasure, usDrivingLicenceBuilder.weightMeasure)&&
        Objects.equals(this.additionalProperties, usDrivingLicenceBuilder.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idNumber, issueState, addressLine1, addressLine2, city, dateOfBirth, documentCategory, expirationDate, eyeColorCode, firstName, gender, issueDate, lastName, middleName, nameSuffix, postalCode, state, weightMeasure, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsDrivingLicenceBuilder {\n");
    sb.append("    idNumber: ").append(toIndentedString(idNumber)).append("\n");
    sb.append("    issueState: ").append(toIndentedString(issueState)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    documentCategory: ").append(toIndentedString(documentCategory)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    eyeColorCode: ").append(toIndentedString(eyeColorCode)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    issueDate: ").append(toIndentedString(issueDate)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nameSuffix: ").append(toIndentedString(nameSuffix)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    weightMeasure: ").append(toIndentedString(weightMeasure)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

