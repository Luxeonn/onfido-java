/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * WatchlistMonitor
 */
@JsonPropertyOrder({
  WatchlistMonitor.JSON_PROPERTY_ID,
  WatchlistMonitor.JSON_PROPERTY_CREATED_AT,
  WatchlistMonitor.JSON_PROPERTY_DELETED_AT,
  WatchlistMonitor.JSON_PROPERTY_APPLICANT_ID,
  WatchlistMonitor.JSON_PROPERTY_REPORT_NAME,
  WatchlistMonitor.JSON_PROPERTY_TAGS,
  WatchlistMonitor.JSON_PROPERTY_SANDBOX
})
@JsonTypeName("watchlist_monitor")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class WatchlistMonitor {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_AT = "created_at";
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_DELETED_AT = "deleted_at";
  private OffsetDateTime deletedAt;

  public static final String JSON_PROPERTY_APPLICANT_ID = "applicant_id";
  private UUID applicantId;

  /**
   * The name of the report type the monitor creates. Can be either \&quot;watchlist_standard\&quot; or \&quot;watchlist_aml\&quot;.
   */
  public enum ReportNameEnum {
    STANDARD("watchlist_standard"),
    
    AML("watchlist_aml"),
    
    UNKNOWN_DEFAULT_OPEN_API("unknown_default_open_api");

    private String value;

    ReportNameEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ReportNameEnum fromValue(String value) {
      for (ReportNameEnum b : ReportNameEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return UNKNOWN_DEFAULT_OPEN_API;
    }
  }

  public static final String JSON_PROPERTY_REPORT_NAME = "report_name";
  private ReportNameEnum reportName;

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags;

  public static final String JSON_PROPERTY_SANDBOX = "sandbox";
  private Boolean sandbox = false;

  public WatchlistMonitor() { 
  }

  @JsonCreator
  public WatchlistMonitor(
    @JsonProperty(JSON_PROPERTY_ID) UUID id, 
    @JsonProperty(JSON_PROPERTY_CREATED_AT) OffsetDateTime createdAt, 
    @JsonProperty(JSON_PROPERTY_DELETED_AT) OffsetDateTime deletedAt, 
    @JsonProperty(JSON_PROPERTY_SANDBOX) Boolean sandbox
  ) {
    this();
    this.id = id;
    this.createdAt = createdAt;
    this.deletedAt = deletedAt;
    this.sandbox = sandbox;
  }

   /**
   * The unique identifier for the monitor.
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }




   /**
   * The date and time at which the monitor was created.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }




   /**
   * The date and time at which the monitor was deleted. If the monitor is still active, this field will be null.
   * @return deletedAt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }




  public WatchlistMonitor applicantId(UUID applicantId) {
    this.applicantId = applicantId;
    return this;
  }

   /**
   * The ID for the applicant associated with the monitor.
   * @return applicantId
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getApplicantId() {
    return applicantId;
  }


  @JsonProperty(JSON_PROPERTY_APPLICANT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setApplicantId(UUID applicantId) {
    this.applicantId = applicantId;
  }


  public WatchlistMonitor reportName(ReportNameEnum reportName) {
    this.reportName = reportName;
    return this;
  }

   /**
   * The name of the report type the monitor creates. Can be either \&quot;watchlist_standard\&quot; or \&quot;watchlist_aml\&quot;.
   * @return reportName
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_REPORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ReportNameEnum getReportName() {
    return reportName;
  }


  @JsonProperty(JSON_PROPERTY_REPORT_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setReportName(ReportNameEnum reportName) {
    this.reportName = reportName;
  }


  public WatchlistMonitor tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public WatchlistMonitor addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A list of tags associated with this monitor. These tags will be applied to each check this monitor creates.
   * @return tags
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


   /**
   * Indicates whether the object was created in the sandbox or not.
   * @return sandbox
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SANDBOX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getSandbox() {
    return sandbox;
  }




  /**
   * Return true if this watchlist_monitor object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WatchlistMonitor watchlistMonitor = (WatchlistMonitor) o;
    return Objects.equals(this.id, watchlistMonitor.id) &&
        Objects.equals(this.createdAt, watchlistMonitor.createdAt) &&
        Objects.equals(this.deletedAt, watchlistMonitor.deletedAt) &&
        Objects.equals(this.applicantId, watchlistMonitor.applicantId) &&
        Objects.equals(this.reportName, watchlistMonitor.reportName) &&
        Objects.equals(this.tags, watchlistMonitor.tags) &&
        Objects.equals(this.sandbox, watchlistMonitor.sandbox);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, deletedAt, applicantId, reportName, tags, sandbox);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WatchlistMonitor {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    applicantId: ").append(toIndentedString(applicantId)).append("\n");
    sb.append("    reportName: ").append(toIndentedString(reportName)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    sandbox: ").append(toIndentedString(sandbox)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

