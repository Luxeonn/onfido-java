/*
 * Onfido API v3.6
 * The Onfido API
 *
 * The version of the OpenAPI document: 3.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.onfido.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.onfido.JSON;


/**
 * DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner
 */
@JsonPropertyOrder({
  DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.JSON_PROPERTY_CATEGORY,
  DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.JSON_PROPERTY_CODES,
  DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.JSON_PROPERTY_OBTAINMENT_DATE,
  DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.JSON_PROPERTY_EXPIRY_DATE
})
@JsonTypeName("document_with_driver_verification_report_allOf_properties_allOf_vehicle_class_details_inner")
@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown = true)
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.4.0")
public class DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {
  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_CODES = "codes";
  private String codes;

  public static final String JSON_PROPERTY_OBTAINMENT_DATE = "obtainment_date";
  private LocalDate obtainmentDate;

  public static final String JSON_PROPERTY_EXPIRY_DATE = "expiry_date";
  private LocalDate expiryDate;

  public DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner() { 
  }

  public DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Vehicle class/category
   * @return category
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCategory(String category) {
    this.category = category;
  }


  public DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner codes(String codes) {
    this.codes = codes;
    return this;
  }

   /**
   * Special conditions driver must meet
   * @return codes
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCodes() {
    return codes;
  }


  @JsonProperty(JSON_PROPERTY_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodes(String codes) {
    this.codes = codes;
  }


  public DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner obtainmentDate(LocalDate obtainmentDate) {
    this.obtainmentDate = obtainmentDate;
    return this;
  }

   /**
   * Category obtainment date
   * @return obtainmentDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OBTAINMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getObtainmentDate() {
    return obtainmentDate;
  }


  @JsonProperty(JSON_PROPERTY_OBTAINMENT_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setObtainmentDate(LocalDate obtainmentDate) {
    this.obtainmentDate = obtainmentDate;
  }


  public DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner expiryDate(LocalDate expiryDate) {
    this.expiryDate = expiryDate;
    return this;
  }

   /**
   * Category expiry date
   * @return expiryDate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getExpiryDate() {
    return expiryDate;
  }


  @JsonProperty(JSON_PROPERTY_EXPIRY_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExpiryDate(LocalDate expiryDate) {
    this.expiryDate = expiryDate;
  }


  /**
   * Return true if this document_with_driver_verification_report_allOf_properties_allOf_vehicle_class_details_inner object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner documentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner = (DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner) o;
    return Objects.equals(this.category, documentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.category) &&
        Objects.equals(this.codes, documentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.codes) &&
        Objects.equals(this.obtainmentDate, documentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.obtainmentDate) &&
        Objects.equals(this.expiryDate, documentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner.expiryDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, codes, obtainmentDate, expiryDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentWithDriverVerificationReportAllOfPropertiesAllOfVehicleClassDetailsInner {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    codes: ").append(toIndentedString(codes)).append("\n");
    sb.append("    obtainmentDate: ").append(toIndentedString(obtainmentDate)).append("\n");
    sb.append("    expiryDate: ").append(toIndentedString(expiryDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

